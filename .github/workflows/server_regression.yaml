name: Server Regression

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

# HINT(lukasmalkmus): Make sure the workflow is only ever run once at a time.
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    # Don't run on forks.
    if: github.repository_owner == 'axiomhq'
    # HINT(lukasmalkmus): Make sure the job is only ever run once per
    # environment, across all active jobs and workflows.
    concurrency:
      group: ${{ matrix.environment }}
    strategy:
      matrix:
        go:
          - "1.19"
          - "1.20"
        environment:
          - development
          - staging
        include:
          - environment: development
            secret_slug: DEV
          - environment: staging
            secret_slug: STAGING
    env:
      AXIOM_URL: ${{ secrets[format('TESTING_{0}_API_URL', matrix.secret_slug)] }}
      AXIOM_TOKEN: ${{ secrets[format('TESTING_{0}_TOKEN', matrix.secret_slug)] }}
      AXIOM_ORG_ID: ${{ secrets[format('TESTING_{0}_ORG_ID', matrix.secret_slug)] }}
      AXIOM_DATASET_SUFFIX: ${{ github.run_id }}-${{ matrix.go }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
      - run: make test-integration
      - name: Cleanup (On Test Failure)
        if: failure()
        run: |
          curl -sL $(curl -s https://api.github.com/repos/axiomhq/cli/releases/tags/v0.10.0 | grep "http.*linux_amd64.tar.gz" | awk '{print $2}' | sed 's|[\"\,]*||g') | tar xzvf - --strip-components=1 --wildcards -C /usr/local/bin "axiom_*_linux_amd64/axiom"
          axiom dataset list -f=json | jq '.[] | select(.id | contains("${{ github.run_id }}-${{ matrix.go }}")).id' | xargs -r -n1 axiom dataset delete -f
