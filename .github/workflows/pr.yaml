name: PR

on:
  pull_request:
    branches:
      - main

jobs:
  gen-diff:
    name: Codegen diff
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go:
          - 1.16
          - 1.17
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - run: make generate
      - run: git diff --exit-code

  lint:
    name: Lint
    needs: gen-diff
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go:
          - 1.16
          - 1.17
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - uses: golangci/golangci-lint-action@v2
        with:
          skip-go-installation: true

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == github.repository
    strategy:
      matrix:
        deployment:
          - azure-1-staging
          - cloud-dev
        go:
          - 1.16
          - 1.17
        include:
          - deployment: azure-1-staging
            axiom_url: TESTING_AZURE_1_STAGING_DEPLOYMENT_URL
            axiom_token: TESTING_AZURE_1_STAGING_ACCESS_TOKEN
          - deployment: cloud-dev
            axiom_url: TESTING_CLOUD_DEV_DEPLOYMENT_URL
            axiom_token: TESTING_CLOUD_DEV_ACCESS_TOKEN
            axiom_org_id: TESTING_CLOUD_DEV_ORG_ID
          - deployment: cloud-dev
            go: 1.17
            update-coverage: true
            update-goreportcard: true
      max-parallel: 1
      fail-fast: false
    env:
      AXIOM_URL: ${{ secrets[matrix.axiom_url] }}
      AXIOM_TOKEN: ${{ secrets[matrix.axiom_token] }}
      AXIOM_ORG_ID: ${{ secrets[matrix.axiom_org_id] }}
      AXIOM_DATASET_SUFFIX: ${{ github.run_id }}-${{ matrix.go }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - run: make test-integration
      - name: Cleanup (On Test Failure)
        if: failure() && matrix.if
        run: |
          go install github.com/axiomhq/cli/cmd/axiom@latest
          axiom dataset list -f=json | jq '.[] | select(.id | contains("${{ github.run_id }}-${{ matrix.go }}")).id' | xargs -n1 axiom dataset delete -f
      - name: Update Coverage
        if: matrix.update-coverage && matrix.if
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

  ci-pass:
    needs: test
    name: CI Pass
    runs-on: ubuntu-latest
    steps:
      - uses: LouisBrunner/checks-action@v1.1.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: CI Pass
          conclusion: ${{ job.status }}
