// Code generated by "stringer -type=limitType,LimitScope -linecomment -output=limit_string.go"; DO NOT EDIT.

package axiom

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[limitRate-1]
	_ = x[limitQuery-2]
	_ = x[limitIngest-3]
}

const _limitType_name = "ratequeryingest"

var _limitType_index = [...]uint8{0, 4, 9, 15}

func (i limitType) String() string {
	i -= 1
	if i >= limitType(len(_limitType_index)-1) {
		return "limitType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _limitType_name[_limitType_index[i]:_limitType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LimitScopeUnknown-0]
	_ = x[LimitScopeUser-1]
	_ = x[LimitScopeOrganization-2]
	_ = x[LimitScopeAnonymous-3]
}

const _LimitScope_name = "unknownuserorganizationanonymous"

var _LimitScope_index = [...]uint8{0, 7, 11, 23, 32}

func (i LimitScope) String() string {
	if i >= LimitScope(len(_LimitScope_index)-1) {
		return "LimitScope(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LimitScope_name[_LimitScope_index[i]:_LimitScope_index[i+1]]
}
