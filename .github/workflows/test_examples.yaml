name: Test Examples

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    if: |
      (github.event.pull_request.head.repo.full_name == github.repository ||
      github.event.push.head.repo.full_name == github.repository) &&
      github.repository_owner == 'axiomhq'
    strategy:
      matrix:
        example:
          - apex
          - ingestevent
          - ingestfile
          # - ingesthackernews # HINT(lukasmalkmus): We do not test this example as it takes too long!
          - logrus
          - otelinstrument
          - oteltraces
          - query
          - querylegacy
          - zap
        include:
          - example: apex
            verify: |
              axiom dataset info $AXIOM_DATASET -f=json | jq -e 'any( .numEvents ; . == 3 )'
          - example: ingestevent
            verify: |
              axiom dataset info $AXIOM_DATASET -f=json | jq -e 'any( .numEvents ; . == 2 )'
          - example: ingestfile
            setup: |
              echo '[{"timestamp":"1668773301","mood":"hyped","msg":"This is awesome!"}]' >> logs.json
            verify: |
              axiom dataset info $AXIOM_DATASET -f=json | jq -e 'any( .numEvents ; . == 1 )'
          - example: logrus
            verify: |
              axiom dataset info $AXIOM_DATASET -f=json | jq -e 'any( .numEvents ; . == 3 )'
          - example: otelinstrument
            verify: |
              axiom dataset info _traces -f=json | jq -e 'any( .numEvents ; . >= 1 )'
          - example: oteltraces
            verify: |
              axiom dataset info _traces -f=json | jq -e 'any( .numEvents ; . >= 1 )'
          - example: query
            setup: |
              echo '[{"mood":"hyped","msg":"This is awesome!"}]' >> logs.json
              axiom ingest $AXIOM_DATASET -f=logs.json -f=logs.json -f=logs.json
              sleep 5
          - example: querylegacy
            setup: |
              echo '[{"mood":"hyped","msg":"This is awesome!"}]' >> logs.json
              axiom ingest $AXIOM_DATASET -f=logs.json -f=logs.json -f=logs.json
              sleep 5
          - example: zap
            verify: |
              axiom dataset info $AXIOM_DATASET -f=json | jq -e 'any( .numEvents ; . == 3 )'
      fail-fast: false
    env:
      AXIOM_URL: ${{ secrets.TESTING_CLOUD_DEV_DEPLOYMENT_URL }}
      AXIOM_TOKEN: ${{ secrets.TESTING_CLOUD_DEV_ACCESS_TOKEN }}
      AXIOM_ORG_ID: ${{ secrets.TESTING_CLOUD_DEV_ORG_ID }}
      AXIOM_DATASET: test-axiom-go-examples-${{ github.run_id }}-${{ matrix.example }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          check-latest: true
          cache: true
          go-version-file: go.mod
      - name: Setup test dataset
        run: |
          curl -sL $(curl -s https://api.github.com/repos/axiomhq/cli/releases/latest | grep "http.*linux_amd64.tar.gz" | awk '{print $2}' | sed 's|[\"\,]*||g') | tar xzvf - --strip-components=1 --wildcards -C /usr/local/bin "axiom_*_linux_amd64/axiom"
          axiom dataset create -n=$AXIOM_DATASET -d="Axiom Go ${{ matrix.example }} example test"
      - name: Setup example
        if: matrix.setup
        run: ${{ matrix.setup }}
      - name: Run example
        run: go run ./examples/${{ matrix.example }}/main.go
      - name: Verify example
        if: matrix.verify
        run: ${{ matrix.verify }}
      - name: Delete test dataset
        if: always()
        run: axiom dataset delete -f $AXIOM_DATASET

  examples-pass:
    name: Examples Pass
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - if: needs.test.result != 'success' && needs.test.result != 'skipped'
        run: exit 1
