// Code generated by "stringer -type=FilterOp -linecomment -output=filter_string.go"; DO NOT EDIT.

package query

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[emptyFilterOp-0]
	_ = x[OpAnd-1]
	_ = x[OpOr-2]
	_ = x[OpNot-3]
	_ = x[OpEqual-4]
	_ = x[OpNotEqual-5]
	_ = x[OpExists-6]
	_ = x[OpNotExists-7]
	_ = x[OpGreaterThan-8]
	_ = x[OpGreaterThanEqual-9]
	_ = x[OpLessThan-10]
	_ = x[OpLessThanEqual-11]
	_ = x[OpStartsWith-12]
	_ = x[OpNotStartsWith-13]
	_ = x[OpEndsWith-14]
	_ = x[OpNotEndsWith-15]
	_ = x[OpRegexp-16]
	_ = x[OpNotRegexp-17]
	_ = x[OpContains-18]
	_ = x[OpNotContains-19]
}

const _FilterOp_name = "andornot==!=existsnot-exists>>=<<=starts-withnot-starts-withends-withnot-ends-withregexpnot-regexpcontainsnot-contains"

var _FilterOp_index = [...]uint8{0, 0, 3, 5, 8, 10, 12, 18, 28, 29, 31, 32, 34, 45, 60, 69, 82, 88, 98, 106, 118}

func (i FilterOp) String() string {
	if i >= FilterOp(len(_FilterOp_index)-1) {
		return "FilterOp(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FilterOp_name[_FilterOp_index[i]:_FilterOp_index[i+1]]
}
